<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Admin Chat</title>
  <script src="/socket.io/socket.io.js"></script>
  <style>
    body { font-family: Arial, sans-serif; background: #f8f9fa; margin: 0; padding: 0; }
    #onlineUsersList {
      position: fixed;
      top: 20px;
      right: 20px;
      background: #fff;
      border: 1px solid #ccc;
      padding: 10px;
      border-radius: 6px;
      width: 220px;
      max-height: 300px;
      overflow-y: auto;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }
    #onlineUsersList button {
      margin: 5px 0;
      width: 100%;
      background: #e9ecef;
      border: none;
      padding: 8px;
      border-radius: 4px;
      cursor: pointer;
      transition: 0.3s;
    }
    #onlineUsersList button:hover {
      background: #007bff;
      color: #fff;
    }

    #chatContainer {
      position: fixed;
      bottom: 80px;
      right: 260px;
      width: 350px;
      height: 420px;
      border: 1px solid #ccc;
      background: #fff;
      display: none;
      z-index: 1000;
      box-shadow: 0 0 10px rgba(0,0,0,0.2);
      border-radius: 10px;
      overflow: hidden;
      flex-direction: column;
    }
    #chatBox {
      flex: 1;
      overflow-y: auto;
      padding: 10px;
      background: #fdfdfd;
    }
    #chatBox p {
      margin: 6px 0;
      padding: 8px 10px;
      border-radius: 6px;
      max-width: 80%;
      display: inline-block;
      word-wrap: break-word;
    }
    .userMsg { background: #f8d7da; text-align: right; float: right; clear: both; }
    .adminMsg { background: #d1e7dd; text-align: left; float: left; clear: both; }

    #chatInput {
      display: flex;
      padding: 5px;
      border-top: 1px solid #ccc;
    }
    #messageInput {
      width: 80%;
      border: 1px solid #ccc;
      border-radius: 4px;
      padding: 5px;
    }
    #sendBtn {
      width: 20%;
      background: #007bff;
      color: white;
      border: none;
      border-radius: 4px;
      margin-left: 5px;
      cursor: pointer;
    }
    #openChatBtn {
      position: fixed;
      bottom: 20px;
      right: 20px;
      z-index: 1050;
      background: #007bff;
      color: #fff;
      border: none;
      padding: 12px 16px;
      border-radius: 50%;
      cursor: pointer;
      box-shadow: 0 2px 6px rgba(0,0,0,0.3);
    }
    small {
      color: #666;
      font-size: 12px;
      display: block;
      margin-top: 2px;
    }
  </style>
</head>
<body>
  <ul id="onlineUsersList"></ul>

  <div id="chatContainer">
    <div id="chatBox"></div>
    <div id="chatInput">
      <input type="text" id="messageInput" placeholder="Type a message...">
      <button id="sendBtn">Send</button>
    </div>
  </div>

  <button id="openChatBtn">ðŸ’¬</button>

  <script>
    const socket = io();
    const adminId = "<%= admin._id %>";
    const chatBox = document.getElementById('chatBox');
    const chatContainer = document.getElementById('chatContainer');
    const openChatBtn = document.getElementById('openChatBtn');
    const input = document.getElementById('messageInput');
    const sendBtn = document.getElementById('sendBtn');
    const userList = document.getElementById('onlineUsersList');
    let currentRoom = null;

    // Toggle chat popup
    openChatBtn.addEventListener('click', () => {
      chatContainer.style.display = 'flex';
      openChatBtn.style.display = 'none';
    });

    // Join admin dashboard
    socket.emit('joinAdminRoomForUser', 'dashboard');

    // ðŸ§© Update online users list
    socket.on('updateOnlineUsers', (users) => {
      userList.innerHTML = '';
      users.forEach(user => {
        const btn = document.createElement('button');
        btn.textContent = `${user.name}`;
        btn.onclick = () => {
          currentRoom = user.id;
          chatBox.innerHTML = '';
          socket.emit('joinAdminRoomForUser', user.id);

          fetch(`/admin/chat/history/${user.id}`)
            .then(res => res.json())
            .then(msgs => {
              msgs.forEach(m => {
                const p = document.createElement('p');
                const time = new Date(m.createdAt).toLocaleString('en-IN', {
                  hour: '2-digit',
                  minute: '2-digit',
                  day: '2-digit',
                  month: 'short',
                });
                p.className = m.isFromAdmin ? 'adminMsg' : 'userMsg';
                p.innerHTML = `
                  <div><strong>${m.isFromAdmin ? 'Admin' : m.senderName || 'User'}:</strong> ${m.content}</div>
                  <small>${time}</small>
                `;
                chatBox.appendChild(p);
              });
              chatBox.scrollTop = chatBox.scrollHeight;
            });
        };
        userList.appendChild(btn);
      });
    });

    // ðŸ§© Send message
    sendBtn.addEventListener('click', () => {
      if (!currentRoom) return alert('Select a user first!');
      const content = input.value.trim();
      if (!content) return;

      socket.emit('chat message', {
        roomId: currentRoom,
        sender: adminId,
        senderName: 'Admin',
        content,
        isFromAdmin: true
      });

      input.value = '';
    });

    // ðŸ§© Receive messages
    socket.on('chat message', (msg) => {
      if (!currentRoom || msg.roomId !== currentRoom) return;
      const p = document.createElement('p');
      const time = new Date(msg.createdAt).toLocaleString('en-IN', {
        hour: '2-digit',
        minute: '2-digit',
        day: '2-digit',
        month: 'short',
      });
      p.className = msg.isFromAdmin ? 'adminMsg' : 'userMsg';
      p.innerHTML = `
        <div><strong>${msg.isFromAdmin ? 'Admin' : msg.senderName || 'User'}:</strong> ${msg.content}</div>
        <small>${time}</small>
      `;
      chatBox.appendChild(p);
      chatBox.scrollTop = chatBox.scrollHeight;
    });
  </script>
</body>
</html>
