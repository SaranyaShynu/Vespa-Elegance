<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Admin Chat</title>
  <script src="/socket.io/socket.io.js"></script>
  <style>
    body { font-family: Arial; padding: 20px; }
    #users { margin-bottom: 20px; }
    #messages { list-style-type: none; padding: 0; height: 300px; overflow-y: auto; border: 1px solid #ccc; margin-bottom: 10px; }
    #messages li { padding: 6px 10px; margin: 4px; border-radius: 4px; }
    .admin { background: #d1e7dd; text-align: right; }
    .user { background: #f8d7da; text-align: left; }
  </style>
</head>
<body>
  <h2>Admin Chat</h2>

  <div id="users">
    <strong>Online Users:</strong>
    <ul id="userList"></ul>
  </div>

  <ul id="messages"></ul>

  <input id="messageInput" placeholder="Type message" />
  <button id="sendBtn" type="button">Send</button>

  <script>
    const socket = io();
    const userList = document.getElementById('userList');
    const messages = document.getElementById('messages');
    const input = document.getElementById('messageInput');
    const sendBtn = document.getElementById('sendBtn');

    let currentRoom = null;

    // ✅ Join admin room
    socket.emit('joinAdminRoomForUser', userId);

    // ✅ Update user list when new users online
    socket.on('updateOnlineUsers', (users) => {
      userList.innerHTML = "";
      users.forEach(userId => {
        const li = document.createElement('li');
        li.textContent = userId;
        li.style.cursor = "pointer";
        li.onclick = () => {
          currentRoom = userId;
          messages.innerHTML = "";
          socket.emit('joinAdminRoomForUser', userId);
          console.log("Switched to user room:", userId);
        };
        userList.appendChild(li);
      });
    });

    // ✅ Send message
    sendBtn.addEventListener('click', () => {
      if (!currentRoom) {
        alert("Select a user first!");
        return;
      }
      const msg = input.value.trim();
      if (!msg) return;

      socket.emit('chat message', {
        roomId,
        sender: "admin",
        senderName: "Admin",
        content: msg,
        isFromAdmin: true
      });

      input.value = '';
    });

    // ✅ Receive messages
    socket.on('chat message', (msg) => {
      const li = document.createElement('li');
      li.className = msg.isFromAdmin ? "admin" : "user";
      li.textContent = `${msg.isFromAdmin ? 'Admin' : msg.senderName}: ${msg.content}`;
      messages.appendChild(li);
      messages.scrollTop = messages.scrollHeight;
    });
  </script>
</body>
</html>
