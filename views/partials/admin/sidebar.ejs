 <aside class="admin-sidebar" id="adminSidebar">
  <nav>
    <ul class="menu-list">
      <li><a href="/admin/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
      <li><a href="/admin/users"><i class="fas fa-users"></i> Users</a></li>
      <li><a href="/admin/category"><i class="fas fa-tags"></i> Categories</a></li>
      <li><a href="/admin/products"><i class="fas fa-plus"></i> Products</a></li>
      <li><a href="/admin/service"><i class="fas fa-tools"></i> Services</a></li>
      <li><a href="/admin/orders"><i class="fas fa-box"></i> Orders</a></li>
      <li><a href="/admin/coupons"><i class="fas fa-ticket-alt"></i> Coupons</a></li>
      <li><a href="/admin/feedback"><i class="fas fa-chart-line"></i> Reports</a></li>
      <li><a href="/admin/settings"><i class="fas fa-cog"></i> Settings</a></li>
    </ul>

    <!-- Sidebar widgets -->
    <div class="sidebar-section">
      <h3>Online Users</h3>
      <ul id="onlineUsersList"></ul>
      <hr>
     <!--<h3>Chat Messages</h3>
      <ul id="adminMessages"></ul>   -->
    </div>

    
    <div class="sidebar-footer">
      <a href="/admin/logout" style="color: azure; margin-left: 18px;"><i class="fas fa-sign-out-alt"></i> Logout</a>
    </div>
  </nav>

<script src="/socket.io/socket.io.js"></script>
<script src="/js/adminSocket.js"></script>

<script>
<script>
(function() {
  const socket = io();
  const adminId = "<%= typeof admin !== 'undefined' && admin ? admin._id : '' %>";
  const adminName = "Admin";
  const onlineUsersList = document.getElementById('onlineUsersList');
  const adminMessagesList = document.getElementById('adminMessages');
  
  const adminInput = document.createElement('input');
  adminInput.id = 'adminInput';
  adminInput.placeholder = 'Type a message';
  adminInput.style.width = 'calc(100% - 60px)';
  adminInput.style.marginTop = '8px';

  const sendBtn = document.createElement('button');
  sendBtn.id = 'sendBtn';
  sendBtn.innerText = 'Send';
  sendBtn.style.marginLeft = '6px';
  sendBtn.style.marginTop = '8px';

  adminMessagesList.parentNode.appendChild(adminInput);
  adminMessagesList.parentNode.appendChild(sendBtn);

  let currentRoom = null;

  socket.emit('joinAdminDashboard');

  socket.on('connect', () => console.log('Admin socket connected:', socket.id));
  socket.on('disconnect', () => console.log('Admin socket disconnected'));

  // ✅ Online users with name
  socket.on('updateOnlineUsers', (users) => {
    if (!onlineUsersList) return;
    onlineUsersList.innerHTML = '';
    users.forEach(user => {
      const li = document.createElement('li');
      li.innerHTML = `<strong>${user.name}</strong>`;
      li.style.cursor = 'pointer';
      li.onclick = () => {
        currentRoom = user.id;
        adminMessagesList.innerHTML = '';
        socket.emit('joinAdminRoomForUser', user.id);

        fetch(`/admin/messages/${user.id}`)
          .then(r => r.json())
          .then(msgs => {
            msgs.forEach(m => {
              const li2 = document.createElement('li');
              const time = new Date(m.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
              const date = new Date(m.createdAt).toLocaleDateString();
              li2.innerHTML = `
                <div style="background:${m.isFromAdmin ? '#d1e7dd' : '#f8d7da'}; margin:4px; padding:6px 10px; border-radius:4px;">
                  <strong>${m.isFromAdmin ? 'Admin' : (m.senderName || 'User')}:</strong> ${m.content}
                  <div style="font-size:11px; color:gray; text-align:right;">${time} | ${date}</div>
                </div>`;
              adminMessagesList.appendChild(li2);
            });
            adminMessagesList.scrollTop = adminMessagesList.scrollHeight;
          })
          .catch(err => console.error('Fetch history failed', err));
      };
      onlineUsersList.appendChild(li);
    });
  });

  // ✅ Send message
  sendBtn.addEventListener('click', () => {
    if (!currentRoom) return alert('Select a user first');
    const content = adminInput.value.trim();
    if (!content) return;
    socket.emit('chat message', {
      roomId: currentRoom,
      sender: adminId,
      senderName: adminName,
      content,
      isFromAdmin: true,
      createdAt: new Date()
    });
    adminInput.value = '';
  });

  // ✅ Receive message
  socket.on('chat message', (msg) => {
    if (!currentRoom || msg.roomId !== currentRoom) return;
    const li = document.createElement('li');
    const time = new Date(msg.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
    const date = new Date(msg.createdAt).toLocaleDateString();
    li.innerHTML = `
      <div style="background:${msg.isFromAdmin ? '#d1e7dd' : '#f8d7da'}; margin:4px; padding:6px 10px; border-radius:4px;">
        <strong>${msg.isFromAdmin ? 'Admin' : msg.senderName}:</strong> ${msg.content}
        <div style="font-size:11px; color:gray; text-align:right;">${time} | ${date}</div>
      </div>`;
    adminMessagesList.appendChild(li);
    adminMessagesList.scrollTop = adminMessagesList.scrollHeight;
  });
})();
</script>

</aside>
