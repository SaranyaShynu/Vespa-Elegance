<aside class="admin-sidebar">
  <nav>
    <ul class="menu-list">
      <li><a href="/admin/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
      <li><a href="/admin/users"><i class="fas fa-users"></i> Users</a></li>
      <li><a href="/admin/category"><i class="fas fa-tags"></i> Categories</a></li>
      <li><a href="/admin/products"><i class="fas fa-plus"></i> Products</a></li>
      <li><a href="/admin/service"><i class="fas fa-tools"></i> Services</a></li>
      <li><a href="/admin/orders"><i class="fas fa-box"></i> Orders</a></li>
      <li><a href="/admin/coupons"><i class="fas fa-ticket-alt"></i> Coupons</a></li>
      <li><a href="/admin/feedback"><i class="fas fa-chart-line"></i> Reports</a></li>
      <li><a href="/admin/settings"><i class="fas fa-cog"></i> Settings</a></li>
    </ul>

    <!-- Sidebar widgets -->
    <div class="sidebar-section">
      <h3>Online Users</h3>
      <ul id="onlineUsersList"></ul>
      <hr>
      <h3>Chat Messages</h3>
      <ul id="adminMessages"></ul>
    </div>

    <!-- Logout -->
    <div class="sidebar-footer">
      <a href="/admin/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
    </div>
  </nav>
</aside>

<!-- Socket.IO for chat -->
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();

  const onlineUsersList = document.getElementById('onlineUsersList');
  const adminMessagesList = document.getElementById('adminMessages');
  const adminInput = document.createElement('input');
  const sendBtn = document.createElement('button');
  sendBtn.innerText = "Send";

  adminMessagesList.parentNode.appendChild(adminInput);
  adminMessagesList.parentNode.appendChild(sendBtn);

  let currentRoom = null;
  const adminId = "<%= typeof admin !== 'undefined' && admin ? admin._id : '' %>";
  const adminName = "Admin";

  if (adminId) {
    socket.emit('joinAdminRoomForUser', adminId);
  }

  // Update online users
  socket.on('updateOnlineUsers', users => {
    onlineUsersList.innerHTML = "";
    users.forEach(uid => {
      const li = document.createElement('li');
      li.textContent = uid;
      li.style.cursor = "pointer";

      li.onclick = () => {
        currentRoom = uid;
        adminMessagesList.innerHTML = "";

        socket.emit('joinAdminRoomForUser', uid);

        // Load chat history
        fetch(`/admin/messages/${uid}`)
          .then(res => res.json())
          .then(msgs => {
            msgs.forEach(msg => {
              const li = document.createElement('li');
              li.textContent = `${msg.isFromAdmin ? 'Admin' : msg.senderName}: ${msg.content}`;
              li.style.background = msg.isFromAdmin ? "#d1e7dd" : "#f8d7da";
              li.style.textAlign = msg.isFromAdmin ? "right" : "left";
              li.style.padding = "6px 10px";
              li.style.margin = "4px";
              li.style.borderRadius = "4px";
              adminMessagesList.appendChild(li);
            });
            adminMessagesList.scrollTop = adminMessagesList.scrollHeight;
          });
      };
      onlineUsersList.appendChild(li);
    });
  });

  // Send message
  sendBtn.addEventListener('click', () => {
    if (!currentRoom) return alert("Select a user first!");
    const content = adminInput.value.trim();
    if (!content) return;

    socket.emit('chat message', {
      roomId: currentRoom,
      sender: adminId,
      senderName: adminName,
      content,
      isFromAdmin: true
    });

    adminInput.value = '';
  });

  // Receive messages
  socket.on('chat message', msg => {
    if (!currentRoom || msg.roomId !== currentRoom) return;

    const li = document.createElement('li');
    li.textContent = `${msg.isFromAdmin ? 'Admin' : msg.senderName}: ${msg.content}`;
    li.style.background = msg.isFromAdmin ? "#d1e7dd" : "#f8d7da";
    li.style.textAlign = msg.isFromAdmin ? "right" : "left";
    li.style.padding = "6px 10px";
    li.style.margin = "4px";
    li.style.borderRadius = "4px";
    adminMessagesList.appendChild(li);
    adminMessagesList.scrollTop = adminMessagesList.scrollHeight;
  });
</script>
