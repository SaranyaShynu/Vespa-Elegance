<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Live Chat</title>
  <script src="/socket.io/socket.io.js"></script>
  <style>
    body { font-family: Arial; padding: 20px; }
    #messages { list-style-type: none; padding: 0; max-height: 400px; overflow-y: auto; }
    #messages li { padding: 8px 10px; margin-bottom: 4px; background: #f1f1f1; border-radius: 4px; }
    form { display: flex; margin-top: 10px; }
    input { flex: 1; padding: 8px; }
    button { padding: 8px 12px; margin-left: 5px; }
  </style>
</head>
<body>
  <h2>Live Chat</h2>
  <ul id="messages"></ul>

  <form id="form">
    <input id="messageInput" placeholder="Type your message" autocomplete="off" />
    <button type="submit">Send</button>
  </form>

  <script>
    const socket = io();

    const input = document.getElementById('messageInput');
    const messagesE1 = document.getElementById('messages');
    const form = document.getElementById('form');

   // <% if (user) { %>
      const roomId = "<%= user._id %>";
      const sender = "<%= user._id %>";
      const senderName = "<%= user.name %>";
  //  <% } else { %>
   //   alert("User not found! Cannot start chat.");
    //<% } %>

    /* Join user room
    if (roomId && sender) {
      socket.emit('joinRoom', roomId);
      console.log('Joined room:', roomId, 'as sender:', sender);
    }  */
   socket.emit('joinRoom', roomId);

    // Load previous messages
    fetch(`/admin/messages/${roomId}`)
      .then(res => res.json())
      .then(msgs => {
        msgs.forEach(msg => {
          const li = document.createElement('li');
          li.textContent = `${msg.isFromAdmin ? 'Admin' : msg.senderName}: ${msg.content}`;
          messagesEl.appendChild(li);
        });
        messagesEl.scrollTop = messagesEl.scrollHeight;
      });

    // Send message (on Enter or button)
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const content = input.value.trim();
      if (!content) return;

      socket.emit('chat message', {
        roomId,
        sender,
        senderName,
        content,
        isFromAdmin: false
      });

      input.value = '';
    });

    // Receive messages
    socket.on('chat message', (msg) => {
      const li = document.createElement('li');
      const name = msg.isFromAdmin ? "Admin" : msg.senderName;
       li.textContent = `${msg.isFromAdmin ? 'Admin' : msg.senderName}: ${msg.content}`;
      messagesE1.appendChild(li);
      messagesE1.scrollTop = messagesE1.scrollHeight;
    });
  </script>
</body>
</html>
